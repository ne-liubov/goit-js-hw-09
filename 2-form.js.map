{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// створення об'єкта з полями email та message\n// (назви властивостей = назви атрибутів в html)\nlet formData = {\n    email: '',\n    message: '',\n};\n\nconst feedbackFormEl = document.querySelector('.feedback-form');\n\n// зчитування даних з localStorage та заповнення полів у формі\nconst fillFormFields = () => {\n    try {\n\n// якщо в localStorage нічого немає — виходимо\n        const savedData = localStorage.getItem('feedback-form-state');\n        if (savedData === null) {\n            return;\n        };\n\n// парсимо JSON, оновлюємо formData\n        const formDataFromLS = JSON.parse(localStorage.getItem('feedback-form-state'));\n\n// перезаписуємо для оновлення даних в formData \n// (якщо ні, то створиться пустий formData) \n        formData = formDataFromLS;\n        console.log(formData);\n\n// перебираємо об'єкт з localStorage\n// значення залишються у формі після перезавантаження сторінки\n// при зміні у формі та перезавантаження, все старе стирається, нове залишається\n        for (const key in formDataFromLS) {\n            feedbackFormEl.elements[key].value = formDataFromLS[key];\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\n// викликається одразу\nfillFormFields();\n\n\n// записує дані в formData і localStorage під час введення\nconst onFormFieldInput = event => {\n// event.target - елемент (поле), в якому вводимо символи\n    const { value, name } = event.target;\n// прибирає пробіли у значеннях, які вводяться у форму\n    formData[name] = value.trim();\n// відправка даних до localStorage\n// JSON.stringify - метод, щоб призвести до рядка JSON\n    localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n};\n\n\n// обробка відправки форми\nconst onFeedbackFormSubmit = event => {\n// заборона на оновлення сторінки\n    event.preventDefault();\n\n// перевірка: всі поля заповнені і не тільки пробілами\n    const isEmptyField = Object.values(formData).some(val => val.trim() === '');\n\n    if (isEmptyField) {\n        alert('Fill please all fields');\n        return;\n    };\n    \n    console.log(formData);\n\n// очищення форми та localStorage\n    feedbackFormEl.reset();\n    localStorage.removeItem('feedback-form-state');\n};\n\n\n// обробники подій\nfeedbackFormEl.addEventListener('input', onFormFieldInput);\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);"],"names":["formData","feedbackFormEl","fillFormFields","formDataFromLS","key","error","onFormFieldInput","event","value","name","onFeedbackFormSubmit","val"],"mappings":"wFAEA,IAAIA,EAAW,CACX,MAAO,GACP,QAAS,EACb,EAEA,MAAMC,EAAiB,SAAS,cAAc,gBAAgB,EAGxDC,EAAiB,IAAM,CACzB,GAAI,CAIA,GADkB,aAAa,QAAQ,qBAAqB,IAC1C,KACd,OAIJ,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAI7EH,EAAWG,EACX,QAAQ,IAAIH,CAAQ,EAKpB,UAAWI,KAAOD,EACdF,EAAe,SAASG,CAAG,EAAE,MAAQD,EAAeC,CAAG,CAE9D,OAAQC,EAAO,CACZ,QAAQ,IAAIA,CAAK,CACpB,CACL,EAIAH,IAIA,MAAMI,EAAmBC,GAAS,CAE9B,KAAM,CAAE,MAAAC,EAAO,KAAAC,GAASF,EAAM,OAE9BP,EAASS,CAAI,EAAID,EAAM,KAAI,EAG3B,aAAa,QAAQ,sBAAuB,KAAK,UAAUR,CAAQ,CAAC,CACxE,EAIMU,EAAuBH,GAAS,CAOlC,GALAA,EAAM,eAAc,EAGC,OAAO,OAAOP,CAAQ,EAAE,KAAKW,GAAOA,EAAI,KAAM,IAAK,EAAE,EAExD,CACd,MAAM,wBAAwB,EAC9B,MAER,CACI,QAAQ,IAAIX,CAAQ,EAGpBC,EAAe,MAAK,EACpB,aAAa,WAAW,qBAAqB,CACjD,EAIAA,EAAe,iBAAiB,QAASK,CAAgB,EACzDL,EAAe,iBAAiB,SAAUS,CAAoB"}